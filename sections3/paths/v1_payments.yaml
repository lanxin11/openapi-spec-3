post:
  description: >
    **Note:** This operation is only available if you have [Invoice
    Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)
    enabled. The Invoice Settlement feature is generally available as of Zuora
    Billing Release 296 (March 2021). This feature includes Unapplied Payments,
    Credit and Debit Memo, and Invoice Item Settlement. If you want to enable
    Invoice Settlement, see [Invoice Settlement Enablement and Checklist
    Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide)
    for more information. 


    Creates a payment in the following scenarios:


    - A full or partial payment on an invoice or a debit memo

    - A full or partial payment on several invoices and debit memos

    - An unapplied payment in the following situations:
      - You do not know which customer account the payment belongs to.
      - You know which customer account the payment belongs to, but you do not know which invoice the payment is applied to.
      - You receive a payment from your customer that exceeds the balance on the invoice.
      - You receive a payment from your customer before the invoice has been created.
      - You intend to create a payment without any invoices or debit memos.
    - A standalone payment. If you only need to create and process an electronic
    payment in Zuora through a Zuora gateway integration but settle the payment
    outside of Zuora, you can create a standalone payment. For a standalone
    payment, you can specify a currency different from the payment currency in
    the customer account settings. 

      The support for standalone payments is in the Early Adopter phase. If you want to use this feature, submit a request at [Zuora Global Support](http://support.zuora.com/) to enable it.

    If you do not know to which customer account the payment belongs, you can
    create a payment without specifying a customer account.


    When you create a payment, the total number of invoice items and debit memo
    items that the payment will apply to should be less than or equal to 15,000.


    For more information, see [Create
    Payments](https://knowledgecenter.zuora.com/CB_Billing/Invoice_Settlement/A_Unapplied_Payments/Management_of_Unapplied_Payments/AA_Create_Payments)
    and [Create Payments Without Specifying Customer
    Accounts](https://knowledgecenter.zuora.com/CB_Billing/Invoice_Settlement/A_Unapplied_Payments/Management_of_Unapplied_Payments/AA_Create_Payments_Without_Specifying_Customer_Accounts).
        
  summary: Create a payment
  operationId: POST_CreatePayment
  tags:
    - Payments
  responses:
    '200':
      headers:
        RateLimit-Limit:
          description: >
            The request limit quota for the time window closest to exhaustion.
            See [rate
            limits](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Policies/Concurrent_Request_Limits#Rate_limits)
            for more information.
          schema:
            type: string
        RateLimit-Remaining:
          description: >
            The number of requests remaining in the time window closest to quota
            exhaustion. See [rate
            limits](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Policies/Concurrent_Request_Limits#Rate_limits)
            for more information.
          schema:
            type: number
        RateLimit-Reset:
          description: >
            The number of seconds until the quota resets for the time window
            closest to quota exhaustion. See [rate
            limits](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Policies/Concurrent_Request_Limits#Rate_limits)
            for more information.
          schema:
            type: number
        Zuora-Request-Id:
          description: >
            The Zuora internal identifier of the API call. You cannot control
            the value of this header.
          schema:
            type: string
            minLength: 36
            maxLength: 36
        Zuora-Track-Id:
          description: >
            A custom identifier for tracing the API call. If you specified a
            tracing identifier in the request headers, Zuora returns the same
            tracing identifier. Otherwise, Zuora does not set this header.
          schema:
            type: string
            maxLength: 64
      description: ''
      content:
        application/json; charset=utf-8:
          schema:
            $ref: ../components/schemas/GETARPaymentType.yaml
        application/json:
          examples:
            response:
              value:
                id: 4028905f5a87c0ff015a87eb6b75007f
                number: P-00000001
                status: Processed
                type: External
                accountId: 4028905f5a87c0ff015a87d25ae90025
                accountNumber: A00000001
                amount: 44.1
                appliedAmount: 44.1
                unappliedAmount: 0
                refundAmount: 0
                creditBalanceAmount: 0
                currency: USD
                effectiveDate: '2017-03-01'
                comment: normal payment
                paymentMethodId: 402881e522cf4f9b0122cf5dc4020045
                paymentMethodSnapshotId: null
                authTransactionId: null
                bankIdentificationNumber: null
                gatewayId: null
                gatewayOrderId: null
                gatewayResponse: null
                gatewayResponseCode: null
                gatewayState: NotSubmitted
                markedForSubmissionOn: null
                referenceId: null
                secondPaymentReferenceId: null
                softDescriptor: null
                softDescriptorPhone: null
                submittedOn: null
                settledOn: null
                cancelledOn: null
                createdDate: '2017-03-01 11:30:37'
                createdById: 402881e522cf4f9b0122cf5d82860002
                updatedDate: '2017-03-01 11:30:37'
                updatedById: 402881e522cf4f9b0122cf5d82860002
                financeInformation:
                  bankAccountAccountingCode: null
                  bankAccountAccountingCodeType: null
                  unappliedPaymentAccountingCode: null
                  unappliedPaymentAccountingCodeType: null
                  transferredToAccounting: 'No'
                gatewayReconciliationStatus: null
                gatewayReconciliationReason: null
                payoutId: null
                success: true
  parameters:
    - $ref: ../components/parameters/GLOBAL_HEADER_Zuora_Track_Id.yaml
    - $ref: ../components/parameters/GLOBAL_HEADER_Zuora_Entity_Ids_Single.yaml
  requestBody:
    content:
      application/json; charset=utf-8:
        schema:
          $ref: ../components/schemas/CreatePaymentType.yaml
    required: true
  x-code-samples:
    - lang: Curl
      source:
        $ref: ../code_samples/Curl/v1_payments/postundefined
    - lang: PHP
      source:
        $ref: ../code_samples/PHP/v1_payments/postundefined
    - lang: Java
      source:
        $ref: ../code_samples/Java/v1_payments/postundefined
    - lang: Python
      source:
        $ref: ../code_samples/Python/v1_payments/postundefined
    - lang: Ruby
      source:
        $ref: ../code_samples/Ruby/v1_payments/postundefined
get:
  description: >
    **Note:** This operation is only available if you have [Invoice
    Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)
    enabled. The Invoice Settlement feature is generally available as of Zuora
    Billing Release 296 (March 2021). This feature includes Unapplied Payments,
    Credit and Debit Memo, and Invoice Item Settlement. If you want to enable
    Invoice Settlement, see [Invoice Settlement Enablement and Checklist
    Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide)
    for more information. 


    Retrieves the information about all payments from all your customer
    accounts.


    ### Filtering


    You can use query parameters to restrict the data returned in the response.
    Each query parameter corresponds to one field in the response body.


    If the value of a filterable field is string, you can set the corresponding
    query parameter to `null` when filtering. Then, you can get the response
    data with this field value being `null`.


    Examples:


    - /v1/payments?status=Processed


    - /v1/payments?currency=USD&status=Processed


    - /v1/payments?status=Processed&type=External&sort=+number
  summary: List payments
  operationId: GET_RetrieveAllPayments
  tags:
    - Payments
  responses:
    '200':
      headers:
        RateLimit-Limit:
          description: >
            The request limit quota for the time window closest to exhaustion.
            See [rate
            limits](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Policies/Concurrent_Request_Limits#Rate_limits)
            for more information.
          schema:
            type: string
        RateLimit-Remaining:
          description: >
            The number of requests remaining in the time window closest to quota
            exhaustion. See [rate
            limits](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Policies/Concurrent_Request_Limits#Rate_limits)
            for more information.
          schema:
            type: number
        RateLimit-Reset:
          description: >
            The number of seconds until the quota resets for the time window
            closest to quota exhaustion. See [rate
            limits](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Policies/Concurrent_Request_Limits#Rate_limits)
            for more information.
          schema:
            type: number
        Zuora-Request-Id:
          description: >
            The Zuora internal identifier of the API call. You cannot control
            the value of this header.
          schema:
            type: string
            minLength: 36
            maxLength: 36
        Zuora-Track-Id:
          description: >
            A custom identifier for tracing the API call. If you specified a
            tracing identifier in the request headers, Zuora returns the same
            tracing identifier. Otherwise, Zuora does not set this header.
          schema:
            type: string
            maxLength: 64
      description: ''
      content:
        application/json; charset=utf-8:
          schema:
            $ref: ../components/schemas/PaymentCollectionResponseType.yaml
        application/json:
          examples:
            response:
              value:
                payments:
                  - id: 4028905f5a87c0ff015a87eb6b75007f
                    number: P-00000001
                    status: Processed
                    type: External
                    accountId: 4028905f5a87c0ff015a87d25ae90025
                    accountNumber: A00000001
                    amount: 44.1
                    appliedAmount: 44.1
                    unappliedAmount: 0
                    refundAmount: 0
                    creditBalanceAmount: 0
                    currency: USD
                    effectiveDate: '2017-03-01'
                    comment: normal payment
                    paymentMethodId: 402881e522cf4f9b0122cf5dc4020045
                    paymentMethodSnapshotId: null
                    authTransactionId: null
                    bankIdentificationNumber: null
                    gatewayId: null
                    gatewayOrderId: null
                    gatewayResponse: null
                    gatewayResponseCode: null
                    gatewayState: NotSubmitted
                    markedForSubmissionOn: null
                    referenceId: null
                    secondPaymentReferenceId: null
                    softDescriptor: null
                    softDescriptorPhone: null
                    submittedOn: null
                    settledOn: null
                    cancelledOn: null
                    createdDate: '2017-03-01 11:30:37'
                    createdById: 402881e522cf4f9b0122cf5d82860002
                    updatedDate: '2017-03-01 11:30:37'
                    updatedById: 402881e522cf4f9b0122cf5d82860002
                    financeInformation:
                      bankAccountAccountingCode: null
                      bankAccountAccountingCodeType: null
                      unappliedPaymentAccountingCode: null
                      unappliedPaymentAccountingCodeType: null
                      transferredToAccounting: 'No'
                    gatewayReconciliationStatus: null
                    gatewayReconciliationReason: null
                    payoutId: null
                success: true
  parameters:
    - $ref: ../components/parameters/GLOBAL_HEADER_Zuora_Track_Id.yaml
    - $ref: ../components/parameters/GLOBAL_HEADER_Zuora_Entity_Ids_Single.yaml
    - $ref: ../components/parameters/GLOBAL_REQUEST_pageSize.yaml
    - name: accountId
      in: query
      required: false
      description: |
        This parameter filters the response based on the `accountId` field.
      schema:
        type: string
    - name: amount
      in: query
      required: false
      description: |
        This parameter filters the response based on the `amount` field.
      schema:
        type: number
        format: double
    - name: appliedAmount
      in: query
      required: false
      description: |
        This parameter filters the response based on the `appliedAmount` field.
      schema:
        type: number
        format: double
    - name: createdById
      in: query
      required: false
      description: |
        This parameter filters the response based on the `createdById` field.
      schema:
        type: string
    - name: createdDate
      in: query
      required: false
      description: |
        This parameter filters the response based on the `createdDate` field.
      schema:
        type: string
        format: date-time
    - name: creditBalanceAmount
      in: query
      required: false
      description: >
        This parameter filters the response based on the `creditBalanceAmount`
        field.
      schema:
        type: number
        format: double
    - name: currency
      in: query
      required: false
      description: |
        This parameter filters the response based on the `currency` field.
      schema:
        type: string
    - name: effectiveDate
      in: query
      required: false
      description: |
        This parameter filters the response based on the `effectiveDate` field.
      schema:
        type: string
        format: date-time
    - name: number
      in: query
      required: false
      description: |
        This parameter filters the response based on the `number` field.
      schema:
        type: string
    - name: refundAmount
      in: query
      required: false
      description: |
        This parameter filters the response based on the `refundAmount` field.
      schema:
        type: number
        format: double
    - name: status
      in: query
      required: false
      description: |
        This parameter filters the response based on the `status` field.
      schema:
        type: string
        enum:
          - Draft
          - Processing
          - Processed
          - Error
          - Canceled
          - Posted
    - name: type
      in: query
      required: false
      description: |
        This parameter filters the response based on the `type` field.
      schema:
        type: string
        enum:
          - External
          - Electronic
    - name: unappliedAmount
      in: query
      required: false
      description: >
        This parameter filters the response based on the `unappliedAmount`
        field.
      schema:
        type: number
        format: double
    - name: updatedById
      in: query
      required: false
      description: |
        This parameter filters the response based on the `updatedById` field.
      schema:
        type: string
    - name: updatedDate
      in: query
      required: false
      description: |
        This parameter filters the response based on the `updatedDate` field.
      schema:
        type: string
        format: date-time
    - name: sort
      in: query
      required: false
      description: >
        This parameter restricts the order of the data returned in the response.
        You can use this parameter to supply a dimension you want to sort on.


        A sortable field uses the following form: 


        *operator* *field_name*


        You can use at most two sortable fields in one URL path. Use a comma to
        separate sortable fields. For example:  *operator* *field_name*,
        *operator* *field_name*  


        *operator* is used to mark the order of sequencing. The operator is
        optional. If you only specify the sortable field without any operator,
        the response data is sorted in descending order by this field.

          - The `-` operator indicates an ascending order.
          - The `+` operator indicates a descending order.

        By default, the response data is displayed in descending order by
        payment number.


        *field_name* indicates the name of a sortable field. The supported
        sortable fields of this operation are as below:

          - number
          - accountId
          - amount
          - appliedAmount
          - unappliedAmount
          - refundAmount
          - creditBalanceAmount
          - effectiveDate
          - createdDate
          - createdById
          - updatedDate
          - updatedById

          
        Examples:


        - /v1/payments?sort=+number


        - /v1/payments?status=Processed&sort=-number,+amount
      schema:
        type: string
  x-code-samples:
    - lang: Curl
      source:
        $ref: ../code_samples/Curl/v1_payments/getundefined
    - lang: PHP
      source:
        $ref: ../code_samples/PHP/v1_payments/getundefined
    - lang: Java
      source:
        $ref: ../code_samples/Java/v1_payments/getundefined
    - lang: Python
      source:
        $ref: ../code_samples/Python/v1_payments/getundefined
    - lang: Ruby
      source:
        $ref: ../code_samples/Ruby/v1_payments/getundefined
