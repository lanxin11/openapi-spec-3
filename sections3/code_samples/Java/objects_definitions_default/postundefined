OkHttpClient client = new OkHttpClient();

MediaType mediaType = MediaType.parse("application/json");
RequestBody body = RequestBody.create(mediaType, "{\n    \"definitions\": {\n        \"Delivery\": {\n            \"description\": \"Delivery schedule for shipping products based on customer's subscription.\",\n            \"filterable\": [\n                \"Quantity__c\",\n                \"ProductName__c\",\n                \"Cancelled__c\",\n                \"ShippingStatus__c\"\n            ],\n            \"label\": \"Delivery\",\n            \"object\": \"Delivery\",\n            \"properties\": {\n                \"CancellationTime__c\": {\n                    \"description\": \"The time at which customer cancelled this particular shipment.\",\n                    \"format\": \"date-time\",\n                    \"label\": \"Cancellation Time\",\n                    \"type\": \"string\"\n                },\n                \"Cancelled__c\": {\n                    \"default\": false,\n                    \"description\": \"Indicator is true when the customer has cancelled this particular shipment.\",\n                    \"label\": \"Shipment Cancelled\",\n                    \"type\": \"boolean\"\n                },\n                \"ContactEmail__c\": {\n                    \"description\": \"The customer's email address.\",\n                    \"label\": \"Customer Email\",\n                    \"maxLength\": 128,\n                    \"type\": \"string\"\n                },\n                \"ContactId__c\": {\n                    \"description\": \"The customer contact who will receive the shipment.\",\n                    \"format\": \"uuid\",\n                    \"label\": \"Ship To Customer\",\n                    \"type\": \"string\"\n                },\n                \"ProductName__c\": {\n                    \"description\": \"The name of the product that is being shipped to customer.\",\n                    \"label\": \"Product Name\",\n                    \"type\": \"string\"\n                },\n                \"Quantity__c\": {\n                    \"description\": \"The quantity of product that is being shipped to customer.\",\n                    \"label\": \"Quantity\",\n                    \"maximum\": 20,\n                    \"minimum\": 1,\n                    \"type\": \"integer\"\n                },\n                \"ShippingDate__c\": {\n                    \"description\": \"The date the product will be sent to shipping vendor for delivery.\",\n                    \"format\": \"date\",\n                    \"label\": \"Shipping Date\",\n                    \"type\": \"string\"\n                },\n                \"ShippingStatus__c\": {\n                    \"default\": \"Pending\",\n                    \"description\": \"The status of the shipment - e.g. Pending, Preparing shipment, Waiting for tracking information, or Shipped.\",\n                    \"enum\": [\n                        \"Pending\",\n                        \"Preparing shipment\",\n                        \"Waiting for tracking information\",\n                        \"Shipped\"\n                    ],\n                    \"label\": \"Shipping Status\",\n                    \"type\": \"string\"\n                },\n                \"SubscriptionId__c\": {\n                    \"description\": \"The subscription that is associated with the shipment record.\",\n                    \"format\": \"uuid\",\n                    \"label\": \"Subscription\",\n                    \"type\": \"string\"\n                },\n                \"TotalWeight__c\": {\n                    \"description\": \"The total weight of the product and packaging that is being shipped to customer.\",\n                    \"label\": \"Total Weight (lbs.)\",\n                    \"minimum\": 0,\n                    \"type\": \"number\"\n                }\n            },\n            \"relationships\": [\n                {\n                    \"cardinality\": \"manyToOne\",\n                    \"fields\": {\n                        \"SubscriptionId__c\": \"Id\"\n                    },\n                    \"namespace\": \"com_zuora\",\n                    \"object\": \"subscription\",\n                    \"recordConstraints\": {\n                        \"create\": {\n                            \"enforceValidMapping\": false\n                        }\n                    }\n                },\n                {\n                    \"cardinality\": \"manyToOne\",\n                    \"fields\": {\n                        \"ContactId__c\": \"Id\"\n                    },\n                    \"namespace\": \"com_zuora\",\n                    \"object\": \"contact\",\n                    \"recordConstraints\": {\n                        \"create\": {\n                            \"enforceValidMapping\": false\n                        }\n                    }\n                }\n            ],\n            \"required\": [\n                \"SubscriptionId__c\",\n                \"ContactId__c\",\n                \"ProductName__c\",\n                \"Quantity__c\",\n                \"ShippingDate__c\"\n            ]\n        },\n        \"birth_place_custom_object\": {\n            \"filterable\": [\n                \"city__c\"\n            ],\n            \"label\": \"Birth Place Custom Object\",\n            \"object\": \"birth_place_custom_object\",\n            \"properties\": {\n                \"ContactId__c\": {\n                    \"format\": \"uuid\",\n                    \"label\": \"Contact\",\n                    \"type\": \"string\"\n                },\n                \"city__c\": {\n                    \"label\": \"city label\",\n                    \"type\": \"string\"\n                },\n                \"country__c\": {\n                    \"label\": \"country label\",\n                    \"type\": \"string\"\n                },\n                \"state__c\": {\n                    \"label\": \"state label\",\n                    \"type\": \"string\"\n                }\n            },\n            \"relationships\": [\n                {\n                    \"cardinality\": \"manyToOne\",\n                    \"fields\": {\n                        \"ContactId__c\": \"Id\"\n                    },\n                    \"namespace\": \"com_zuora\",\n                    \"object\": \"contact\",\n                    \"recordConstraints\": {\n                        \"create\": {\n                            \"enforceValidMapping\": false\n                        }\n                    }\n                }\n            ],\n            \"required\": [\n                \"city__c\",\n                \"state__c\",\n                \"country__c\"\n            ],\n            \"type\": \"object\"\n        }\n    }\n}");
Request request = new Request.Builder()
  .url("https://rest.zuora.com/objects/definitions/default")
  .post(body)
  .addHeader("Authorization", "Bearer 6d151216ef504f65b8ff6e9e9e8356d3")
  .addHeader("content-type", "application/json")
  .addHeader("cache-control", "no-cache")
  .build();

Response response = client.newCall(request).execute();