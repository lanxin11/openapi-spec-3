example:
  apiField: TermEndDate
  apiObject: Subscription
  condition: Subscription.Status == _SUBSCRIPTION_STATUS
  cronExpression: 0 30 10 ? * *
  description: >-
    Trigger a scheduled event at 10:30 AM based on TermEndDate of subscription
    objects.
  displayName: Term End Date Scheduled Event
  id: d306545b74e445e4bffcf1c7609804be
  name: TermEndDateScheduledEvent
  namespace: user.notification
  parameters:
    _SUBSCRIPTION_STATUS:
      description: The status of the subscription
      displayName: Subscription Status
      options:
        - Draft
        - Active
        - Pending
        - Expired
        - Cancelled
      valueType: STRING
properties:
  apiField:
    description: >-
      The base field of the base object in the `apiObject` field, should be in
      date or timestamp format. The scheduled event notifications are triggered
      based on this date and the event parameters (before or after a specified
      number of days) from notification definitions. Should be specified in the
      pattern: ^[A-Z][\\w\\-]*$
    type: string
  apiObject:
    description: >-
      The base object that the scheduled event is defined upon. The base object
      should contain a date or timestamp format field. Should be specified in
      the pattern: ^[A-Z][\\w\\-]*$
    type: string
  condition:
    description: >
      The filter rule conditions, written in
      [JEXL](http://commons.apache.org/proper/commons-jexl/). The scheduled
      event is triggered only if the condition is evaluated as true.

      The rule might contain event context merge fields and data source merge
      fields. Data source merge fields must be from [the base object of the
      event or from the joined objects of the base
      object](https://knowledgecenter.zuora.com/DC_Developers/M_Export_ZOQL#Data_Sources_and_Objects).

      Scheduled events with invalid merge fields will fail to evaluate, thus
      will not be triggered. For example, to trigger an invoice due date
      scheduled event to only invoices with an amount over 1000, you would
      define the following condition:


      ```Invoice.Amount > 1000```


      `Invoice.Amount` refers to the `Amount` field of the Zuora object
      `Invoice`.
    type: string
  cronExpression:
    description: >-
      The cron expression defines the time when scheduled event notifications
      will be sent.
    type: string
  description:
    description: The description of the scheduled event.
    type: string
  displayName:
    description: The display name of the scheduled event.
    type: string
  id:
    description: Scheduled event ID.
    format: uuid
    type: string
  name:
    description: The name of the scheduled event.
    type: string
  namespace:
    description: The namespace of the scheduled event name in the `name` field.
    type: string
  parameters:
    additionalProperties:
      description: Definition of a filter rule parameter.
      properties:
        description:
          description: The description of the parameter.
          maxLength: 255
          type: string
        displayName:
          description: The display name of the parameter.
          maxLength: 255
          type: string
        options:
          description: The option values of the parameter.
          items:
            type: string
          type: array
        valueType:
          description: The type of the value.
          type: string
      type: object
    description: >-
      The parameter definitions of the filter rule. The names of the parameters
      must match with the filter rule and can't be duplicated. You should
      specify all the parameters when creating scheduled event notifications.
    type: object
title: ScheduledEvent
type: object
