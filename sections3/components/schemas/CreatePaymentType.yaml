allOf:
  - properties:
      accountId:
        description: |
          The ID of the customer account that the payment is created for.
        type: string
      accountNumber:
        description: >
          The number of the customer account that the payment is created for,
          such as `A00000001`.


          You can specify either `accountNumber` or `accountId` for a customer
          account. If both of them are specified, they must refer to the same
          customer account.
        type: string
      amount:
        description: |
          The total amount of the payment.
        format: double
        type: number
      authTransactionId:
        description: >
          The authorization transaction ID from the payment gateway. Use this
          field for electronic payments, such as credit cards.


          When you create a payment for capturing the authorized funds, it is
          highly recommended to pass in the gatewayOrderId that you used when
          authorizing the funds by using the [Create
          authorization](https://www.zuora.com/developer/api-reference/#operation/POST_CreateAuthorization)
          operation, together with the `authTransactionId` field.


          The following payment gateways support this field:
            - Adyen Integration v2.0
            - CyberSource 1.28
            - CyberSource 1.97
            - CyberSource 2.0
            - Chase Paymentech Orbital
            - Ingenico ePayments
            - SlimPay
            - Verifi Global Payment Gateway
            - WePay Payment Gateway Integration
        maxLength: 50
        type: string
      comment:
        description: |
          Additional information related to the payment.
        maxLength: 255
        minLength: 0
        type: string
      currency:
        description: >
          When Standalone Payment is not enabled, the `currency` of the payment
          must be the same as the payment currency defined in the customer
          account settings through Zuora UI.


          When Standalone Payment is enabled and `standalone` is `true`, the
          `currency` of the standalone payment can be different from the payment
          currency defined in the customer account settings. The amount will not
          be summed up to the account balance or key metrics regardless of
          currency.
        type: string
      debitMemos:
        description: |
          Container for debit memos. The maximum number of debit memos is 1,000.
        items:
          $ref: ./PaymentDebitMemoApplicationCreateRequestType.yaml
        type: array
      effectiveDate:
        description: >
          The date when the payment takes effect, in `yyyy-mm-dd` format.


          **Note:** This is an optional field that only applies to electronic
          payments. When specified, it must be set to the date of today.
        format: date
        type: string
      financeInformation:
        description: |
          Container for the finance information related to the payment.
        properties:
          bankAccountAccountingCode:
            description: >
              The accounting code that maps to a bank account in your accounting
              system.
            maxLength: 100
            minLength: 0
            type: string
          transferredToAccounting:
            description: >
              Whether the payment was transferred to an external accounting
              system. Use this field for integration with accounting systems,
              such as NetSuite. 
            enum:
              - Processing
              - 'Yes'
              - 'No'
              - Error
              - Ignore
            type: string
          unappliedPaymentAccountingCode:
            description: |
              The accounting code for the unapplied payment.
            maxLength: 100
            minLength: 0
            type: string
        type: object
      gatewayId:
        description: >
          The ID of the gateway instance that processes the payment. The ID must
          be a valid gateway instance ID and this gateway must support the
          specific payment method. 


          - When creating electronic payments, this field is required. 

          - When creating external payments, this field is optional.
        type: string
      gatewayOptions:
        description: >
          The field used to pass gateway-specific parameters and parameter
          values.
        properties:
          key:
            description: |
              The name of a gateway-specific parameter.
            maxLength: 255
            type: string
          value:
            description: |
              The value of the gateway-specific parameter.
            maxLength: 255
            type: string
        type: object
      gatewayOrderId:
        description: >
          A merchant-specified natural key value that can be passed to the
          electronic payment gateway when a payment is created. If not
          specified, the payment number will be passed in instead.


          Gateways check duplicates on the gateway order ID to ensure that the
          merchant do not accidentally enter the same transaction twice. This ID
          can also be used to do reconciliation and tie the payment to a natural
          key in external systems. The source of this ID varies by merchant.
          Some merchants use their shopping cart order IDs, and others use
          something different. Merchants use this ID to track transactions in
          their eCommerce systems.


          When you create a payment for capturing the authorized funds, it is
          highly recommended to pass in the gatewayOrderId that you used when
          authorizing the funds by using the [Create
          authorization](https://www.zuora.com/developer/api-reference/#operation/POST_CreateAuthorization)
          operation, together with the `authTransactionId` field.
        maxLength: 50
        type: string
      invoices:
        description: |
          Container for invoices. The maximum number of invoices is 1,000.
        items:
          $ref: ./PaymentInvoiceApplicationCreateRequestType.yaml
        type: array
      mitTransactionSource:
        description: >
          Payment transaction source used to differentiate the transaction
          source in Stored Credential Transaction framework.
            - `C_Unscheduled`: Cardholder-initiated transaction (CIT) that does not occur on scheduled or regularly occurring dates.
            - `M_Recurring`: Merchant-initiated transaction (MIT) that occurs at regular intervals.
            - `M_Unscheduled`: Merchant-initiated transaction (MIT) that does not occur on scheduled or regularly occurring dates.
        enum:
          - C_Unscheduled
          - M_Recurring
          - M_Unscheduled
        type: string
      paymentMethodId:
        description: >
          The unique ID of the payment method that the customer used to make the
          payment. 


          For a specified credit card payment method, it is recommended that
          [the support for stored credential
          transactions](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/L_Payment_Methods/Stored_credential_transactions)
          for this payment method is already enabled.


          If no payment method ID is specified in the request body, the default
          payment method for the customer account is used automatically. If the
          default payment method is different from the type of payments that you
          want to create, an error occurs.
        type: string
      referenceId:
        description: >
          The transaction ID returned by the payment gateway. Use this field to
          reconcile payments between your gateway and Zuora Payments.
        maxLength: 100
        minLength: 0
        type: string
      softDescriptor:
        description: >-
          A payment gateway-specific field that maps to Zuora for the gateways,
          Orbital, Vantiv and Verifi.
        maxLength: 35
        type: string
      softDescriptorPhone:
        description: >-
          A payment gateway-specific field that maps to Zuora for the gateways,
          Orbital, Vantiv and Verifi.
        maxLength: 20
        type: string
      standalone:
        default: false
        description: >
          This field is only available if support for standalone payments is
          enabled.


          Specify `true` to create a standalone payment that will be processed
          in Zuora through Zuora gateway integration but will be settled outside
          of Zuora.


          When `standalone` is set to `true`:
            - `accountId`, `amount`, `currency`, and `type` are required. 
            - `type` must be `Electronic`.
            - `currency` of the payment can be different from the payment currency in the customer account settings.
            - The amount will not be summed up into the account balance and key metrics regardless of the payment currency.
            - No settlement data will be created.
            - Either the applied amount or the unapplied amount of the payment is zero.
            - The standalone payment cannot be applied, unapplied, or transferred.

          Specify `false` to create an ordinary payment that will be created,
          processed, and settled in Zuora. The `currency` of an ordinary payment
          must be the same as the currency in the customer account settings.
        type: boolean
      type:
        description: |
          The type of the payment.
        enum:
          - External
          - Electronic
        type: string
    required:
      - amount
      - currency
      - type
    type: object
  - $ref: ./PaymentObjectNSFields.yaml
  - $ref: ./PaymentObjectCustomFields.yaml
example:
  accountId: 4028905f5a87c0ff015a87d25ae90025
  amount: 44.1
  comment: normal payment
  currency: USD
  debitMemos:
    - amount: 4.1
      debitMemoId: 4028905f5a87c0ff015a87e49e6b0062
      items:
        - amount: 4
          debitMemoItemId: 4028905f5a87c0ff015a87e49e7a0063
        - amount: 0.1
          taxItemId: 4028905f5a87c0ff015a87e49f5e0065
  effectiveDate: '2017-03-01'
  invoices:
    - amount: 40
      invoiceId: 4028905f5a87c0ff015a87d3f8f10043
      items:
        - amount: 39
          invoiceItemId: 4028905f5a87c0ff015a87d3f90c0045
        - amount: 1
          taxItemId: 4028905f5a87c0ff015a87d3f884003f
  paymentMethodId: 402881e522cf4f9b0122cf5dc4020045
  type: External
