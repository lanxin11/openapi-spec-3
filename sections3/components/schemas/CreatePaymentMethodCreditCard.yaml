properties:
  cardHolderInfo:
    $ref: ./CreatePaymentMethodCardholderInfo.yaml
  cardNumber:
    description: >
      Credit card number. This field is required if `type` is set to
      `CreditCard`.
    type: string
  cardType:
    description: >
      The type of the credit card. This field is required if `type` is set to
      `CreditCard`.


      Possible values include `Visa`, `MasterCard`, `AmericanExpress`,
      `Discover`, `JCB`, and `Diners`. For more information about credit card
      types supported by different payment gateways, see [Supported Payment
      Gateways](https://knowledgecenter.zuora.com/CB_Billing/M_Payment_Gateways/Supported_Payment_Gateways).
    type: string
  checkDuplicated:
    description: >
      Indicates whether the duplication check is performed when you create a new
      credit card payment method. The default value is `false`.


      With this field set to `true`, Zuora will check all active payment methods
      associated with the same billing account to ensure that no duplicate
      credit card payment methods are created. An error is returned if a
      duplicate payment method is found.
              
      The following fields are used for the duplication check:
        * `cardHolderName`
        * `expirationMonth`
        * `expirationYear`
        * `creditCardMaskNumber`. It is the masked credit card number generated by Zuora. For example:
          ```
          ************1234
          ```
    type: boolean
  expirationMonth:
    description: >
      One or two digit expiration month (1-12) of the credit card. This field is
      required if `type` is set to `CreditCard`.
    type: integer
  expirationYear:
    description: >
      Four-digit expiration year of the credit card. This field is required if
      `type` is set to `CreditCard`.
    type: integer
  mitConsentAgreementRef:
    description: >
      Specifies your reference for the stored credential consent agreement that
      you have established with the customer. Only applicable if you set the
      `mitProfileAction` field.
    maxLength: 128
    type: string
  mitConsentAgreementSrc:
    description: |
      Required if you set the `mitProfileAction` field.
    enum:
      - External
    type: string
  mitNetworkTransactionId:
    description: >
      Specifies the ID of a network transaction. Only applicable if you set the
      `mitProfileAction` field to `Persist`.
    maxLength: 128
    type: string
  mitProfileAction:
    description: >
      If you set this field, Zuora creates a stored credential profile within
      the payment method.


      * `Activate` - Use this value if you are creating the stored credential
      profile after receiving the customer's consent.

        Zuora will create the stored credential profile then send a cardholder-initiated transaction (CIT) to the payment gateway to validate the stored credential profile. If the CIT succeeds, the status of the stored credential profile will be `Active`. If the CIT does not succeed, Zuora will not create a stored credential profile.
        
        If the payment gateway does not support the stored credential transaction framework, the status of the stored credential profile will be `Agreed`.


      * `Persist` - Use this value if the stored credential profile represents a
      stored credential profile in an external system. The status of the payment
      method's stored credential profile will be `Active`.
    enum:
      - Activate
      - Persist
    type: string
  mitProfileAgreedOn:
    description: |
      The date on which the profile is agreed. The date format is `yyyy-mm-dd`.
    format: date
    type: string
  mitProfileType:
    description: >
      Required if you set the `mitProfileAction` field. Indicates the type of
      the stored credential profile to process recurring or unsecheduled
      transactions.
    enum:
      - Recurring
      - Unscheduled
    type: string
  securityCode:
    description: |
      CVV or CVV2 security code of the credit card.

      To ensure PCI compliance, this value is not stored and cannot be queried.
    type: string
type: object
