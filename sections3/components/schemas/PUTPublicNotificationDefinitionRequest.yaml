example:
  active: true
  callout:
    active: true
    calloutAuth:
      domain: example_domain
      password: example_password
      preemptive: true
      username: example_user
    calloutBaseurl: https://www.example.com/callout/AccountEdit
    calloutParams:
      AccountName: <Account.Name>
      AccountNumber: <Account.Number>
    calloutRetry: true
    description: Callout when an account is edited
    httpMethod: POST
    name: Callout for Account Edited
    requiredAuth: true
  calloutActive: true
  communicationProfileId: 6e569e1e05f040eda51a927b140c0ac5
  description: Notification sent out when an account is edited
  emailActive: true
  emailTemplateId: 6e569e1e05f040eda51a927b140c0ac6
  filterRule:
    condition: >-
      Account.Balance >= _VIP_BALANCE_AMOUNT && Account.Status ==
      _ACCOUNT_STATUS
    description: Filter rule to test if an account is a VIP account
    parameters:
      _ACCOUNT_STATUS:
        description: The status of the VIP Account
        displayName: VIP Account Status
        options:
          - Draft
          - Active
          - Canceled
        valueType: STRING
      _VIP_BALANCE_AMOUNT:
        description: The minimum account balance
        displayName: VIP Account Balance
        options: null
        valueType: BIG_DECIMAL
  filterRuleParams:
    _ACCOUNT_STATUS: Active
    _VIP_ACCOUNT_BALANCE: '100000'
  name: Account Edit Notification
properties:
  active:
    default: true
    description: The status of the notification definition. The default value is `true`.
    type: boolean
  associatedAccount:
    description: >
      Indicates with which type of account this notification is associated.
      Depending on your environment, you can use one of the following values:

      * `Account.Id`: ID of the primary customer account related to the
      notification. It is also the default value.

      * `ParentAccount.Id`: this option is available only if you have [Customer
      Hierarchy](https://knowledgecenter.zuora.com/Billing/Subscriptions/Customer_Accounts/A_Customer_Account_Introduction#Customer_Hierarchy)
      enabled for your tenant.

      * `SubscriptionOwnerAccount.Id`: this option is available if the base
      object of the notification is Order Action.


      **Note:** before specifying this field, we recommend that you use [Data
      Source](https://knowledgecenter.zuora.com/Billing/Reporting/D_Data_Sources_and_Exports/C_Data_Source_Reference)
      to check the available types of accounts for the current notification.  
    type: string
  callout:
    properties:
      active:
        default: true
        description: The status of the callout. The default value is `true`.
        type: boolean
      calloutAuth:
        $ref: ./CalloutAuth.yaml
      calloutBaseurl:
        description: The callout URL. It must start with 'https://'
        example: https://***
        format: url
        minLength: 10
        type: string
      calloutParams:
        $ref: ./CalloutMergeFields.yaml
      calloutRetry:
        default: true
        description: >-
          Specified whether to retry the callout when the callout fails. The
          default value is `true`.
        type: boolean
      description:
        description: Description for the callout.
        maxLength: 255
        type: string
      httpMethod:
        description: The HTTP method of the callout.
        enum:
          - GET
          - PUT
          - POST
          - DELETE
        example: POST
        type: string
      name:
        description: The name of the created callout.
        maxLength: 255
        type: string
      requiredAuth:
        description: Specifies whether the callout requires auth.
        type: boolean
    required:
      - eventTypeName
      - name
      - calloutBaseurl
      - httpMethod
      - requiredAuth
    type: object
  calloutActive:
    default: false
    description: The status of the callout action. The default value is `false`.
    type: boolean
  communicationProfileId:
    description: |
      The profile that notification definition belongs to. If you want to
      update the notification to a system notification, you should pass
      'SystemNotification'. '
    format: uuid
    type: string
  description:
    description: The description of the notification definition.
    maxLength: 255
    type: string
  emailActive:
    default: false
    description: The status of the email action. The default value is `false`.
    type: boolean
  emailTemplateId:
    description: >
      The ID of the email template. If emailActive is updated from

      false to true, an email template is required, and the EventType of

      the email template MUST be the same as the EventType of the notification
      definition.
    format: uuid
    type: string
  filterRule:
    description: ''
    properties:
      condition:
        description: >
          The filter rule conditions, written in
          [JEXL](http://commons.apache.org/proper/commons-jexl/).

          The rule might contain event context merge fields and data source
          merge fields. Data source merge fields must be from [the base object
          of the event or from the joined objects of the base
          object](https://knowledgecenter.zuora.com/DC_Developers/M_Export_ZOQL#Data_Sources_and_Objects).
          Notifications with invalid merge fields will fail to evaluate, thus
          will not be invoked. For example, to trigger an event when an invoice
          is posted with the amount over 1000, you would define the following
          condition on the `Invoice` object:


          ```changeType == 'UPDATE' && Invoice.Status == 'Posted' &&
          Invoice.Status_old != 'Posted' && Invoice.Amount > 1000```


          There are conventions and keywords you need to be aware of. For
          example:


          * `changeType` is a keyword to specify what kind of change happened to
          the object. Allowed values are `INSERT`, `UPDATE` or `DELETE`.


          * `Invoice.Status` refers to field `Status` of the Zuora object
          `Invoice`.


          * A variable with the `_old` suffix means itâ€™s a previous value of the
          corresponding object field. The "_old" fields are only available on
          the base objects.
        example: >-
          Account.Balance >= _VIP_BALANCE_AMOUNT && Account.Status ==
          _ACCOUNT_STATUS
        type: string
      description:
        description: The description of the filter rule.
        maxLength: 255
        type: string
      parameters:
        $ref: ./FilterRuleParameterDefinitions.yaml
    required:
      - eventTypeName
      - condition
      - parameters
    type: object
  filterRuleParams:
    $ref: ./FilterRuleParameterValues.yaml
  name:
    description: The name of the notification definition, which is unique in the profile.
    maxLength: 255
    type: string
type: object
