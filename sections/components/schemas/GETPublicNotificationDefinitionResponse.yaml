example:
  active: true
  associatedAccount: ParentAccount.Id
  callout:
    active: true
    calloutAuth:
      domain: example_domain
      password: example_password
      preemptive: true
      username: example_user
    calloutBaseurl: https://www.example.com/callout/AccountEdit
    calloutParams:
      AccountName: <Account.Name>
      AccountNumber: <Account.AccountNumber>
    calloutRetry: true
    description: Callout when an account is edited
    eventTypeName: AccountEdit
    httpMethod: POST
    id: 6e569e1e05f040eda51a927b140c0ac7
    name: Callout for Account Edited
    requiredAuth: true
  calloutActive: true
  communicationProfileId: 6e569e1e05f040eda51a927b140c0ac5
  createdBy: 6e569e1e05f040eda51a927b140c0ac3
  createdOn: '2017-04-18T07:36:19.798Z'
  description: Notification sent out when an account is edited
  emailActive: true
  emailTemplateId: 6e569e1e05f040eda51a927b140c0ac6
  eventTypeName: AccountEdit
  filterRule:
    condition: >-
      Account.Balance >= _VIP_BALANCE_AMOUNT && Account.Status ==
      _ACCOUNT_STATUS
    description: Filter rule to test if an account is a VIP account
    eventTypeName: null
    id: 6e569e1e05f040eda51a927b140c0ac8
    parameters:
      _ACCOUNT_STATUS:
        description: The status of the VIP Account
        displayName: VIP Account Status
        options:
          - Draft
          - Active
          - Canceled
        valueType: STRING
      _VIP_BALANCE_AMOUNT:
        description: The minimum account balance
        displayName: VIP Account Balance
        options: null
        valueType: BIG_DECIMAL
  filterRuleParams:
    _ACCOUNT_STATUS: Active
    _VIP_ACCOUNT_BALANCE: '100000'
  id: 6e569e1e05f040eda51a927b140c0ac2
  name: Account Edit Notification
  updatedBy: 6e569e1e05f040eda51a927b140c0ac4
  updatedOn: '2017-04-18T07:36:19.798Z'
properties:
  active:
    description: The status of the notification definition. The default value is `true`.
    type: boolean
  associatedAccount:
    description: |
      Indicates with which type of account this notification is associated.
    type: string
  callout:
    properties:
      active:
        default: true
        description: The status of the callout. The default value is `true`.
        type: boolean
      calloutAuth:
        $ref: ./CalloutAuth.yaml
      calloutBaseurl:
        description: The callout URL. It must start with 'https://'
        example: https://***
        format: url
        minLength: 10
        type: string
      calloutParams:
        $ref: ./CalloutMergeFields.yaml
      calloutRetry:
        default: true
        description: >-
          Specified whether to retry the callout when the callout fails. The
          default value is `true`.
        type: boolean
      description:
        description: Description for the callout.
        maxLength: 255
        type: string
      eventTypeName:
        description: The name of the custom event type.
        minLength: 1
        type: string
      httpMethod:
        description: The HTTP method of the callout.
        enum:
          - GET
          - PUT
          - POST
          - DELETE
        example: POST
        type: string
      id:
        description: >-
          The ID of the callout. If `calloutActive` is `true`, a callout is
          required. The eventTypeName of the callout MUST be the same as the
          eventTypeName.
        format: uuid
        type: string
      name:
        description: The name of the created callout.
        maxLength: 255
        type: string
      requiredAuth:
        description: Specifies whether the callout requires auth.
        type: boolean
    type: object
  calloutActive:
    description: The status of the callout action. The default value is `false`.
    type: boolean
  communicationProfileId:
    description: The profile that the notification definition belongs to.
    format: uuid
    type: string
  createdBy:
    description: The ID of the user who created the notification definition.
    format: uuid
    type: string
  createdOn:
    description: >-
      The time when the notification definition was created. Specified in the
      UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g.
      1997-07-16T19:20:30.45+00:00
    format: date-time
    type: string
  description:
    description: Description of the notification definition
    maxLength: 255
    type: string
  emailActive:
    description: The status of the email action. The default value is `false`.
    type: boolean
  emailTemplateId:
    description: >-
      The ID of the email template. In the request, there should be at least one
      email template or callout.
    format: uuid
    type: string
  eventTypeName:
    description: The name of the event type.
    minLength: 1
    type: string
  eventTypeNamespace:
    description: |
      The namespace of the `eventTypeName` field. 
    type: string
  filterRule:
    description: ''
    properties:
      condition:
        description: >
          The filter rule conditions, written in
          [JEXL](http://commons.apache.org/proper/commons-jexl/).

          The rule might contain event context merge fields and data source
          merge fields. Data source merge fields must be from [the base object
          of the event or from the joined objects of the base
          object](https://knowledgecenter.zuora.com/DC_Developers/M_Export_ZOQL#Data_Sources_and_Objects).
          Notifications with invalid merge fields will fail to evaluate, thus
          will not be invoked. For example, to trigger an event when an invoice
          is posted with the amount over 1000, you would define the following
          condition on the `Invoice` object:


          ```changeType == 'UPDATE' && Invoice.Status == 'Posted' &&
          Invoice.Status_old != 'Posted' && Invoice.Amount > 1000```


          There are conventions and keywords you need to be aware of. For
          example:


          * `changeType` is a keyword to specify what kind of change happened to
          the object. Allowed values are `INSERT`, `UPDATE` or `DELETE`.


          * `Invoice.Status` refers to field `Status` of the Zuora object
          `Invoice`.


          * A variable with the `_old` suffix means itâ€™s a previous value of the
          corresponding object field. The "_old" fields are only available on
          the base objects.
        example: >-
          Account.Balance >= _VIP_BALANCE_AMOUNT && Account.Status ==
          _ACCOUNT_STATUS
        type: string
      description:
        description: The description of the filter rule.
        maxLength: 255
        type: string
      eventTypeName:
        description: The value is `null`.
        minLength: 1
        type: string
      id:
        description: >-
          The ID of the filter rule. If not specified or null, the notification
          definition is always qualified to process events of "eventType".
        format: uuid
        type: string
      parameters:
        $ref: ./FilterRuleParameterDefinitions.yaml
    type: object
  filterRuleParams:
    $ref: ./FilterRuleParameterValues.yaml
  id:
    description: The ID associated with this notification definition.
    format: uuid
    type: string
  name:
    description: The name of the notification definition.
    maxLength: 255
    type: string
  updatedBy:
    description: The ID of the user who updated the notification definition.
    format: uuid
    type: string
  updatedOn:
    description: >-
      The time when the notification was updated. Specified in the UTC timezone
      in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g.
      1997-07-16T19:20:30.45+00:00
    format: date-time
    type: string
type: object
